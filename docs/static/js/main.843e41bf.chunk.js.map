{"version":3,"sources":["Componentes/AddCategory.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","getGif","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAiB7C,OACI,8BACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMd,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eAyB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCbfC,EAnBL,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGPC,EAHO,0FAGkFC,UAAUH,GAH5F,sBAIMI,MAAOF,GAJb,cAIPG,EAJO,gBAKQA,EAAKC,OALb,uBAKNC,EALM,EAKNA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACPC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAItCa,QAAQC,IAAIR,GAfC,kBAgBLA,GAhBK,4CAAH,sDCADS,EAAc,SAAC,GAAmB,EAAlBN,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKgB,UAAU,wCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPC,EAAQ1B,GACH2B,MAAK,SAAAC,GAEEJ,EAAS,CACLjB,KAAMqB,EACNN,SAAS,SAO1B,CAACtB,IAEGuB,EDlBgBM,CAAc7B,GAA9BO,EAH4B,EAG5BA,KAAKe,EAHuB,EAGvBA,QAIZ,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDlB,EAArD,OACCsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYX,EAAKE,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEjBlB,SAASmB,IAAe,MAIEhD,mBAAS,CAAC,gBAJZ,mBAI3BiD,EAJ2B,KAIflD,EAJe,KAYnC,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQkD,EAAWtB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,W,MCvB9BgC,IAASC,OAEL,cAACH,EAAD,IAEFI,SAASC,eAAe,W","file":"static/js/main.843e41bf.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory  = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats ]);\r\n            setinputValue('');\r\n        }       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit= {handleSubmit}>\r\n                <input\r\n                type=\"text\"\r\n                value ={inputValue}\r\n                onChange={ handleInputChange}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n const getGifs = async(category) => {\r\n\r\n      \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=lzkv0uXDUEevizUKqJ8TroCX19BWu7C3&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }\r\n})\r\n\r\n    console.log(gifs);\r\n     return gifs ;\r\n    }\r\n\r\n    export default getGifs","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data,loading} = useFetchGifs( category );\r\n\r\n        \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce\" > {category} </h3>\r\n        {loading && <p className=\"animate__animated animate__flash\" >loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    data.map((img) => (\r\n                       <GifGridItem                      \r\n                       key= {img.id}\r\n                       {...img}/>\r\n                    ))\r\n\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport  getGif  from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGif( category )\r\n            .then(imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n               \r\n                \r\n            });\r\n      \r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport default function GifExpertApp() {\r\n\r\n    // const categories = ['One Punch', 'Samuray X', 'Dragon Ball'];\r\n\r\n    const [ categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories ([...categories, 'Naruto']) \r\n    //     setCategories( cats => [...cats, 'Naruto'])\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories}/>\r\n            <hr />\r\n\r\n       \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                         <GifGrid \r\n                         key={category}\r\n                         category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}